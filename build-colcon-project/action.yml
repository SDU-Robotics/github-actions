# This is a composite workflow

# On call it will:
# - if ROS_DISTRO is not set call install-dependencies to set it up
# - create a colcon workspace in ${GITHUB_WORKSPACE}/${{ inputs.workspace-dir }}
# - clone the project in the workspace
# - run rosdep
# - run colcon build
# - run colcon test (optionally)

name: Build colcon project
description: Build a colcon project
inputs:
  build-type:
    description: "CMAKE_BUILD_TYPE for the project"
    required: true
    default: 'RelWithDebInfo'
  cmake-args:
    description: "Extra cmake arguments"
    required: false
    default: ''
  colcon-build-args:
    description: "Extra colcon arguments for build"
    required: false
    default: ''
  colcon-test-args:
    description: "Extra colcon arguments for test"
    required: false
    default: ''
  build-packages:
    description: "colcon packages to be built (default is all packages)"
    required: false
    default: ''
  test-packages:
    description: "colcon package to be tested (default is all packages)"
    required: false
    default: ''
  skip-test:
    description: "Whether to skip test"
    required: false
    default: 'false'
  workspace-dir:
    description: "Workspace location (in ${GITHUB_WORKSPACE})"
    required: false
    default: 'colcon_ws'
runs:
  using: "composite"
  steps:
    - name: Setup ROS
      if: env.ROS_DISTRO == ''
      uses: jrl-umi3218/github-actions/install-dependencies@master
      with:
        ubuntu: |
          ros: |
            apt: ros-base
    - name: Setup workspace
      run: |
        mkdir -p ${GITHUB_WORKSPACE}/${{ inputs.workspace-dir }}/src
        cd ${GITHUB_WORKSPACE}/${{ inputs.workspace-dir }}
      shell: bash
    - name: Checkout repository code
      uses: actions/checkout@v3
      with:
        submodules: recursive
        path: ${{ inputs.workspace-dir }}/src/${{ github.repository }}
    - name: Download dependent repository codes
      run: |
        set -e
        set -x
        cd ${GITHUB_WORKSPACE}/${{ inputs.workspace-dir }}
        if [ -f src/${{ github.repository }}/depends.rosinstall ]
        then
          wstool init src
          wstool merge -t src src/${{ github.repository }}/depends.rosinstall -y
          wstool update -t src
        fi
      shell: bash
    - name: Rosdep install
      run: |
        set -e
        set -x
        cd ${GITHUB_WORKSPACE}/${{ inputs.workspace-dir }}
        if [ ! -f /etc/ros/rosdep/sources.list.d/20-default.list ]
        then
          sudo rosdep init
        fi
        rosdep update
        rosdep install -y -r --from-paths src --ignore-src
      shell: bash
    - name: colcon build
      run: |
        set -e
        set -x
        cd ${GITHUB_WORKSPACE}/${{ inputs.workspace-dir }}
        set +x
        . devel/setup.bash
        set -x
        COLCON_OPTIONS="--merge-install"
        if [ "${{ inputs.build-packages }}" != "" ]
        then
          COLCON_OPTIONS="${COLCON_OPTIONS} --packages-select ${{ inputs.build-packages }}"
        fi
        colcon build ${COLCON_OPTIONS} ${{ inputs.colcon-build-args }} --cmake-args -DCMAKE_BUILD_TYPE=${{ inputs.build-type }} ${{ inputs.cmake-args }}
      shell: bash
    - name: Run test
      if: ${{ inputs.skip-test == false || inputs.skip-test == 'false' }}
      run: |
        set -e
        set -x
        cd ${GITHUB_WORKSPACE}/${{ inputs.workspace-dir }}
        set +x
        . install/setup.bash
        set -x
        COLCON_OPTIONS="--merge-install "
        if [ "${{ inputs.test-packages }}" != "" ]
        then
          COLCON_OPTIONS="${COLCON_OPTIONS} --packages-select ${{ inputs.test-packages }}"
        fi
        colcon test ${COLCON_OPTIONS} ${{ inputs.colcon-test-args }}
        colcon test-result --verbose --all
      shell: bash
